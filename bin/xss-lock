#!/bin/bash
# TODO: Fix dimmer

set -e
me="$(readlink -f "$0")"

log="${HOME}/.cache/i3/$(basename ${me})/$$.log"
mkdir -p "$(dirname "$log")"
exec 3>"$log"
flock -w 0 3
trap "rm -rf ${log}" EXIT INT

# Boilerplate from the flock manpage
# [[ "$LOCKER" != "$me" ]] && exec env LOCKER="$me" flock -en "$me" "$me" "$@" || :

timeout=600
notify=$((timeout / 30))

op="$1"

if [[ -z "$op" ]]; then
	op="start"
fi

configure() {
	xset s $((timeout - notify)) $notify
	xset dpms $((timeout * 2)) $((timeout * 22 / 10)) $((timeout * 24 / 10))
}

dimmer() {
	# systemctl --user "$op" xss-dimmer@${notify}.service
	# TODO: Fix dimmer
	echo "$@" >&2
	return 0
}

postlock() {
	pactl -- set-sink-mute @DEFAULT_SINK@ off
	pactl -- set-source-mute @DEFAULT_SOURCE@ off
	dunstctl set-paused false
	i3-msg "mode default"
}

prelock() {
	i3-msg "mode locked"
	playerctl -a pause
	pactl -- set-sink-mute @DEFAULT_SINK@ on
	pactl -- set-source-mute @DEFAULT_SOURCE@ on
	dunstctl set-paused true
}

case "$op" in
start)
	configure
	exec xss-lock --transfer-sleep-lock "$me" lock
	;;
dim | notify)
	echo "notify: start"
	trap 'echo notify: user activity;  kill %% 2> /dev/null; exit 0' HUP  # user activity
	trap 'echo notify: locker started; kill %% 2> /dev/null; exit 0' TERM # locker started
	# dimmer start
	sleep infinity &
	wait
	echo "notify: end"
	;;
lock)
	echo "lock: lock screen" >&2
	# Something may have meddled with screensaver settings
	configure
	# Lock screen
	prelock
	betterlockscreen -l dim -- --composite
	postlock
	# Alternative if we prefer videos:
	# XSECURELOCK_SAVER=saver_mpv
	# XSECURELOCK_LIST_VIDEOS_COMMAND="ls -1 ~/.config/i3/wallpapers/*.mp4"
	# xsecurelock
	echo "lock: unlock screen" >&2
	# After unlocking screen, stop dimmer, restore notifications
	# dimmer stop
	;;
esac
