# i3-gaps

set $mod Mod4
set $alt Mod1
set $up k
set $down j
set $left h
set $right l
set $i3_dir ~/.config/i3
set $term kitty --session ~/.config/kitty/sessions/main.conf --instance-group MAIN --listen-on=unix:/tmp/kitty-main
set $mediaplayer cmus

font Iosevka-Nerd-Font-Complete-Mono 12

# Border size and corner radius: defined in Xresources
set_from_resource $border_size i3wm.border_size 3
set_from_resource $floating_border i3wm.floating_border_size 2
set_from_resource $minimal_border i3wm.minimal_border_size 1
set_from_resource $corner_radius i3wm.corner_radius 10
set_from_resource $icons i3wm.icons Papirus-Dark

for_window [tiling] border pixel 0
for_window [floating] border pixel 0
for_window [title="Firefox — Sharing Indicator"] border pixel $minimal_border, sticky enable, move position 20 ppt -5 px
for_window [class="dropdown"] border pixel 0
for_window [class="dropdown" tiling] gaps vertical 0
for_window [class="dropdown" tiling] gaps horizontal 0

# Style and colors
default_border pixel 3
default_floating_border pixel 3

# Instructions from PyWal README
# Set colors from Xresources
# Change 'color7' and 'color2' to whatever colors you want i3 to use
# from the generated scheme.
# NOTE: The '#f0f0f0' in the lines below is the color i3 will use if
# it fails to get colors from Xresources.
set_from_resource $fg i3wm.color7 #f0f0f0
set_from_resource $bg i3wm.color3 #f0f0f0

# class                 border  backgr. text indicator child_border
client.focused          $bg     $bg     $fg  $bg       $bg
client.focused_inactive $bg     $bg     $fg  $bg       $bg
client.unfocused        $bg     $bg     $fg  $bg       $bg
client.urgent           $bg     $bg     $fg  $bg       $bg
client.placeholder      $bg     $bg     $fg  $bg       $bg

client.background       $bg

# Gaps
gaps top	5
gaps left	5
gaps right	5
gaps inner	5
gaps outer 0
#smart_gaps on
#smart_gaps inverse_outer
smart_borders on
smart_borders no_gaps
hide_edge_borders smart_no_gaps

set $mode_gaps Gaps: (o)uter, (i)nner, (h)orizontal, (v)ertical, (t)op, (r)ight, (b)ottom, (l)eft
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_horiz Horizontal Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_verti Vertical Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_top Top Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_right Right Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_bottom Bottom Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_left Left Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym h      mode "$mode_gaps_horiz"
        bindsym v      mode "$mode_gaps_verti"
        bindsym t      mode "$mode_gaps_top"
        bindsym r      mode "$mode_gaps_right"
        bindsym b      mode "$mode_gaps_bottom"
        bindsym l      mode "$mode_gaps_left"
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_horiz" {
        bindsym plus  gaps horizontal current plus 5
        bindsym minus gaps horizontal current minus 5
        bindsym 0     gaps horizontal current set 0

        bindsym Shift+plus  gaps horizontal all plus 5
        bindsym Shift+minus gaps horizontal all minus 5
        bindsym Shift+0     gaps horizontal all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_verti" {
        bindsym plus  gaps vertical current plus 5
        bindsym minus gaps vertical current minus 5
        bindsym 0     gaps vertical current set 0

        bindsym Shift+plus  gaps vertical all plus 5
        bindsym Shift+minus gaps vertical all minus 5
        bindsym Shift+0     gaps vertical all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_top" {
        bindsym plus  gaps top current plus 5
        bindsym minus gaps top current minus 5
        bindsym 0     gaps top current set 0

        bindsym Shift+plus  gaps top all plus 5
        bindsym Shift+minus gaps top all minus 5
        bindsym Shift+0     gaps top all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_right" {
        bindsym plus  gaps right current plus 5
        bindsym minus gaps right current minus 5
        bindsym 0     gaps right current set 0

        bindsym Shift+plus  gaps right all plus 5
        bindsym Shift+minus gaps right all minus 5
        bindsym Shift+0     gaps right all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_bottom" {
        bindsym plus  gaps bottom current plus 5
        bindsym minus gaps bottom current minus 5
        bindsym 0     gaps bottom current set 0

        bindsym Shift+plus  gaps bottom all plus 5
        bindsym Shift+minus gaps bottom all minus 5
        bindsym Shift+0     gaps bottom all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_left" {
        bindsym plus  gaps left current plus 5
        bindsym minus gaps left current minus 5
        bindsym 0     gaps left current set 0

        bindsym Shift+plus  gaps left all plus 5
        bindsym Shift+minus gaps left all minus 5
        bindsym Shift+0     gaps left all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mouse_warping none
focus_follows_mouse no

# dmenu for passwords: copies password into clipboard
bindsym $mod+Shift+p exec --no-startup-id passmenu
bindsym $mod+p exec --no-startup-id passmenu --type

# Audio
# TODO: Implement script to choose which controls keys should bind to (i.e., basic "mixer")
set $refresh_i3status killall -SIGUSR1 i3status
set $change_volume_script ~/.config/i3/bin/set-pulseaudio-volume.bash
set $audio_output @DEFAULT_SINK@
set $audio_intput @DEFAULT_SOURCE@
bindsym XF86AudioRaiseVolume exec --no-startup-id $change_volume_script $audio_output volume +1%
bindsym XF86AudioLowerVolume exec --no-startup-id $change_volume_script $audio_output volume -1%
bindsym XF86AudioMute        exec --no-startup-id $change_volume_script $audio_output mute toggle
bindsym XF86AudioMicMute     exec --no-startup-id $change_volume_script $audio_input mute toggle
bindsym XF86AudioPlay        exec --no-startup-id playerctl -p $mediaplayer play-pause && $refresh_i3status
bindsym XF86AudioPause       exec --no-startup-id playerctl -p $mediaplayer pause && $refresh_i3status
bindsym XF86AudioStop        exec --no-startup-id playerctl -p $mediaplayer stop && $refresh_i3status && refresh_i3status
bindsym XF86AudioNext        exec --no-startup-id playerctl -p $mediaplayer next && $refresh_i3status
bindsym XF86AudioPrev        exec --no-startup-id playerctl -p $mediaplayer previous && $refresh_i3status

# Brightness
set $adjust_brightness_script ~/.config/i3/bin/adjust-brightness.bash
bindsym XF86MonBrightnessUp exec --no-startup-id $adjust_brightness_script +1%
bindsym XF86MonBrightnessDown exec --no-startup-id $adjust_brightness_script 1%-
bindsym XF86KbdBrightnessUp exec --no-startup-id $adjust_brightness_script -d "*kbd*" +1%
bindsym XF86KbdBrightnessDown exec --no-startup-id $adjust_brightness_script -d "*kbd*" 1%-

# Dunst (notifications)
bindsym $mod+backslash exec dunstctl close
bindsym $mod+bracketright exec dunstctl history-pop

# use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec $term

# kill focused window
bindsym $mod+Shift+q kill

# execute command
set $rofi rofi -icon-theme $icons -window-thumbnail -show-icons -drun-match-fields name
set $rofi_open_opts -theme docu -modi drun -show drun
set $rofi_find_opts -theme fancy -modi window -show window -window-thumbnail
bindsym $mod+o      exec --no-startup-id $rofi $rofi_open_opts
bindsym XF86LaunchA exec --no-startup-id $rofi $rofi_find_opts

# change focus
bindsym $mod+$left  focus left
bindsym $mod+$down  focus down
bindsym $mod+$up    focus up
bindsym $mod+$right focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+$left  move left
bindsym $mod+Shift+$down  move down
bindsym $mod+Shift+$up    move up
bindsym $mod+Shift+$right move right
bindsym $mod+Ctrl+o      move container to output right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym j resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Up resize grow height 10 px or 10 ppt
        bindsym Down resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

mode "locked" {
# Empty: we want *all* i3 keybinds to be disabled when the screen is locked, and obviously defining a keybind to return to normal mode would defeat the point.
# This mode is only accessible through IPC.
}

# split in horizontal orientation
bindsym $mod+Ctrl+h split h

# split in vertical orientation
bindsym $mod+Ctrl+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle
bindsym $mod+Shift+f fullscreen toggle global

# change container layout (tabbed, toggle split)
# bindsym $mod+w layout toggle splitv splith tabbed
# bindsym $mod+v split toggle
# Original:
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+b focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# default workspace layout: tabbed
workspace_layout tabbed

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10
bindsym $mod+Tab workspace back_and_forth
bindsym $mod+$alt+o focus output right
bindsym $mod+Ctrl+n nop "new-workspace"
focus_wrapping no

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10
bindsym $mod+Shift+o  move workspace to output right
# bindsym $mod+Shift+n nop "move-to-new-workspace"

# reload/restart
# TODO: Figure out WTF
# bindsym $mod+Shift+c exec --no-startup-id exec systemctl --user reload --no-block i3.service
bindsym $mod+Shift+c reload
bindsym $mod+Shift+r restart

bindsym $mod+Escape exec "loginctl lock-session"

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"
bindsym $mod+Shift+Ctrl+e exec "i3-msg exit"

bindsym Print exec --no-startup-id exec ~/.config/i3/bin/screenshot window
bindsym $mod+Print exec --no-startup-id exec ~/.config/i3/bin/screenshot desktop

# Get info about container/workspace
bindsym $mod+i nop "container-info"
bindsym $mod+Shift+i nop "workspace-info"

# Random rules
no_focus [window_type="splash"]
for_window [class="Nm-connection-editor"] floating enable
for_window [class="Shadow"] fullscreen enable
for_window [window_role="PictureInPicture"] floating enable

# Start stuff

# TODO: Call i3-wpd script to allow workspace-specific backgrounds
# i3-altlayout: Automatically optimizes split aspect ratios
exec --no-startup-id "i3altlayout"

exec_always --no-startup-id ~/.xsession

# Guake autoload
exec_always --no-startup-id guake

set $kitty_launcher /home/hactar/.config/kitty/bin/launch_session
# Kitty floating terminal autoload
exec_always --no-startup-id $kitty_launcher media --i3 -n kitty_media -p LC -s 0.35 1.0
bindsym $mod+t nop kitty_media

# Notes floating terminal
exec_always --no-startup-id $kitty_launcher notes --i3 -n kitty_notepad -p CC -s 0.75 0.75
bindsym $mod+Shift+n nop kitty_notepad

bindsym $mod+Shift+w exec systemctl --user start wallpaper.service

# Move window to scratchpad
bindsym $mod+Ctrl+x move window scratchpad

# Toggle scratchpad visibility
bindsym $mod+Ctrl+Shift+x scratchpad show

# Toggle sticky mode (floating)
bindsym $mod+Shift+s sticky toggle

# Center (floating) window
bindsym $mod+Mod1+c move position center

# Mark window (prompt)
bindsym $mod+m exec i3-input -F 'mark %s' -P 'Mark window: '

# Add mark to window (prompt)
bindsym $mod+Shift+m exec i3-input -F 'mark --add %s' -P 'Add mark to window: '

# Swap with marked window (prompt)
bindsym $mod+$alt+n exec i3-input -F 'swap container with mark %s' -P 'Swap container with mark: '

# Navigate to and focus on marked window
bindsym $mod+n exec i3-input -F '[con_mark=%s] focus' -P 'Navigate to mark: '

# Move window to mark
bindsym $mod+Control+m exec i3-input -F 'move window to mark %s' -P 'Move window to mark: '

# Move container to mark
bindsym $mod+Shift+Mod1+m exec i3-input -F 'move container to mark %s' -P 'Move container to mark: '

# Move to prev workspace
bindsym $mod+Mod1+Left workspace prev
bindsym $mod+Mod1+h workspace prev

# Move to next workspace
bindsym $mod+Mod1+Right workspace next
bindsym $mod+Mod1+l workspace next

# Move window to prev workspace
bindsym $mod+Mod1+Shift+Left move window to workspace prev
bindsym $mod+Mod1+Shift+h move window to workspace prev

# Move window to next workspace
bindsym $mod+Mod1+Shift+Right move window to workspace next
bindsym $mod+Mod1+Shift+l move window to workspace next

# Change workspace name
bindsym $mod+Mod1+r exec i3-input -F 'rename workspace to %s' -P 'New name: '

# Perma-float windows
for_window [class="Yad" title="yad-calendar"] floating enable
for_window [title="Inkscape insert text"] floating enable
for_window [title="Guake!"] floating enable

# vim:ft=conf
